sudo: required

services:
  - docker
env:
  global:
    - IMAGE_NAME=win-test-angular
  
language: bash

before_install:
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
    
cache:
  bundler: true
  directories:
    - $HOME/docker
  
# addons:
#   apt:
#     packages:
#       - docker-ce

before_script:
  - docker -v
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker images
  - docker pull $IMAGE_NAME:latest || true

after_script:
  - docker images

script: 
  - git_sha="$(git rev-parse --short HEAD)"
  - docker build --cache-from $IMAGE_NAME:latest --build-arg BUILDKIT_INLINE_CACHE=1  -t $IMAGE_NAME:latest  .

deploy:
  provider: heroku
  api_key:
    secure: $HEROKU_API_KEY
  app: herokuwin
  run:
    - heroku auth:token
    - docker push registry.heroku.com/$HEROKU_APP_NAME/web
# before_deploy:
#   - docker login -u "$DOCKER_USERNAME" --password-stdin
# deploy:
#   provider: script
#   script: docker push $IMAGE_NAME:latest
#   on:
#     branch: master
